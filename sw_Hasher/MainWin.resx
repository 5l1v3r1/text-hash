<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>